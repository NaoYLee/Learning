def test1():
    a = 300
    print('-' * 5 + f'test1修改前：a={a}' + '-' * 5)
    a = 200
    print('-' * 5 + f'test1修改后：a={a}' + '-' * 5)
def test2():
    a = 400
    print('-' * 8 + f'test2：a={a}' + '-' * 7)
test1()
test2()
# print(a)
'''
-----test1修改前：a=300-----
-----test1修改后：a=200-----
--------test2：a=400-------
NameError: name 'a' is not defined
局部变量，就是在函数内部定义的变量
其作用范围是这个函数内部，在函数的外部是不能使用的
因为其作用范围只是在自己的函数内部，所以不同的函数可以定义相同名字的局部变量
局部变量的作用，为了临时保存数据需要在函数中定义变量来进行存储
当函数调用时，局部变量被创建，当函数调用完成后这个变量就不能够使用了
'''

a = 100
def test1():
    print('-' * 5 + f'全局变量为：a={a}' + '-' * 5)
def test2():
    print('-' * 5 + f'全局变量为：a={a}' + '-' * 5)
test1()
test2()
'''
-----全局变量为：a=100-----
-----全局变量为：a=100-----
在函数体外定义的变量叫做全局变量
全局变量能够在所有的函数中进行访问
'''

def test1():
    a = 300
    print('-' * 5 + f'test1修改前：a={a}' + '-' * 5)
    a = 200
    print('-' * 5 + f'test1修改后：a={a}' + '-' * 5)
test1()
'''
-----test1修改前：a=300-----
-----test1修改后：a=200-----
当函数内局部变量与全局变量名字相同时，按局部变量的值进行操作
'''

def test1():
    global a
    print('-' * 5 + f'test1修改前：a={a}' + '-' * 5)
    a = 200
    print('-' * 5 + f'test1修改后：a={a}' + '-' * 5)
def test2():
    print('-' * 5 + f'全局变量为：a={a}' + '-' * 5)
test1()
test2()
'''
-----test1修改前：a=100-----
-----test1修改后：a=200-----
-----全局变量为：a=200-----
在函数体中使用global关键字指定全局变量实现对全局变量进行修改
'''